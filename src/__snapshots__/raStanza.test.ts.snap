// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RaStanza reader clears 1`] = `Map {}`;

exports[`RaStanza reader creates an empty stanza 1`] = `Map {}`;

exports[`RaStanza reader handles CRLF newlines 1`] = `
Map {
  "key1" => "value1",
  "key2" => "value2",
}
`;

exports[`RaStanza reader handles commented lines 1`] = `
Map {
  "key1" => "value1",
  "key2" => "value2",
  "key3" => "value3",
}
`;

exports[`RaStanza reader handles continued lines 1`] = `
Map {
  "key1" => "value1",
  "key2" => "a really long value that continues",
  "key3" => "another really long value that continues a lot",
  "key4" => "yet another really long value that continues with a comment in it",
}
`;

exports[`RaStanza reader handles indented lines 1`] = `
Map {
  "key1" => "value1",
  "key2" => "value",
}
`;

exports[`RaStanza reader ignores indentation with checkIndent false 1`] = `
Map {
  "key1" => "value1",
  "key2" => "value",
}
`;

exports[`RaStanza reader parses a list of strings 1`] = `
Map {
  "key1" => "value1",
  "key2" => "value2",
}
`;

exports[`RaStanza reader parses a multiple line stanza 1`] = `
Map {
  "key1" => "value1",
  "key2" => "value2",
  "key3" => "",
}
`;

exports[`RaStanza reader parses a single line stanza 1`] = `
Map {
  "key1" => "value1",
}
`;

exports[`RaStanza reader populates an empty stanza 1`] = `Map {}`;

exports[`RaStanza reader populates an empty stanza 2`] = `
Map {
  "key1" => "value1",
  "key2" => "value2",
}
`;

exports[`RaStanza reader removes a line 1`] = `
Map {
  "key1" => "value1",
  "key3" => "",
}
`;

exports[`RaStanza reader updates a line 1`] = `
Map {
  "key1" => "value1",
  "key2" => "value2_new",
  "key3" => "",
}
`;
